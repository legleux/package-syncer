name: Build release

on:
  # schedule:
  #   - cron: '0 */1 * * *'
  push:
  workflow_dispatch:


jobs:
  release_needed:
    runs-on: ubuntu-latest
    outputs:
      release_needed: ${{ steps.release_needed.outputs.release_needed }}
    env:
      PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check if release needed
        id: check
        run: |
          RELEASE_NEEDED=$(python main.py)
          echo ${RELEASE_NEEDED} > git_rev
          echo "release_needed=${RELEASE_NEEDED}" >> $GITHUB_OUTPUT

      - name: Save git rev
        uses: actions/upload-artifact@v3
        with:
          name: git_rev
          path: ${{ github.workspace }}/git_rev

  make_release:
    runs-on: ubuntu-latest
    needs: release_needed
    if: needs.release_needed.outputs.release_needed != 'false'
    env:
      PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Get clio_tests artifact
        uses: actions/download-artifact@v3
        with:
          name: git_rev

      - name: Get latest artifact
        run: |
          pip install requests
          python get_artifact.py $(cat git_rev)
          ls -lah
          echo $PWD

      - name: Git rev
        id: git_rev
        run: |
          git_rev=$(cat git_rev)
          echo "git_rev=${git_rev}" >> $GITHUB_OUTPUT
          echo "short_rev=${git_rev:0:8}" >> $GITHUB_OUTPUT

      - uses: avakar/tag-and-release@v1
        with:
          tag_name: ${{ steps.git_rev.outputs.short_rev }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          name: "Version ${{ steps.git_rev.outputs.short_rev }}"
          tag_name: ${{ steps.git_rev.outputs.short_rev }}
          files:
            ${{ github.workspace }}/*.deb
            ${{ github.workspace }}/*.rpm
